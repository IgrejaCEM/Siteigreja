// Script para verificar o estado atual do banco de produ√ß√£o
require('dotenv').config();

// For√ßar uso do banco de produ√ß√£o do Render.com
process.env.DATABASE_URL = 'postgresql://postgres:WWiZILOORFMgerRjFMPSJLQrfLGFfviU@shuttle.proxy.rlwy.net:14638/railway';

const knex = require('knex');
const path = require('path');

// Configura√ß√£o espec√≠fica para produ√ß√£o
const productionConfig = {
  client: 'pg',
  connection: process.env.DATABASE_URL,
  pool: {
    min: 2,
    max: 10
  }
};

console.log('üîç VERIFICANDO ESTADO DO BANCO DE PRODU√á√ÉO...');
console.log('üîß URL do banco:', process.env.DATABASE_URL ? 'CONFIGURADO' : 'N√ÉO CONFIGURADO');

const db = knex(productionConfig);

async function checkProductionDB() {
  try {
    console.log('üîç Testando conex√£o com banco de produ√ß√£o...');
    await db.raw('SELECT 1');
    console.log('‚úÖ Conex√£o com banco de produ√ß√£o estabelecida!');
    
    // Verificar se a tabela existe
    const tableExists = await db.schema.hasTable('store_products');
    console.log('‚úÖ Tabela store_products existe:', tableExists);
    
    if (tableExists) {
      // Verificar produtos existentes
      const products = await db('store_products').select('*');
      console.log('üì¶ Produtos encontrados no banco de PRODU√á√ÉO:', products.length);
      
      if (products.length > 0) {
        console.log('üìã Lista de produtos:');
        products.forEach(product => {
          console.log(`   - ID: ${product.id}, Nome: ${product.name}, Pre√ßo: R$ ${product.price}, Estoque: ${product.stock}`);
        });
        
        // Verificar especificamente os produtos 1, 2, 3
        console.log('\nüîç Verificando produtos espec√≠ficos:');
        for (let i = 1; i <= 3; i++) {
          const product = await db('store_products').where('id', i).first();
          if (product) {
            console.log(`‚úÖ Produto ID ${i} encontrado: ${product.name} - R$ ${product.price}`);
          } else {
            console.log(`‚ùå Produto ID ${i} N√ÉO encontrado!`);
          }
        }
      } else {
        console.log('‚ùå Nenhum produto encontrado no banco de PRODU√á√ÉO!');
      }
    } else {
      console.log('‚ùå Tabela store_products n√£o existe no banco de PRODU√á√ÉO!');
    }
    
  } catch (error) {
    console.error('‚ùå Erro ao verificar banco de PRODU√á√ÉO:', error);
    console.error('üìã Stack:', error.stack);
  } finally {
    await db.destroy();
    process.exit(0);
  }
}

checkProductionDB(); 