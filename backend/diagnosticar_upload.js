const fs = require('fs');
const path = require('path');

console.log('üîç DIAGN√ìSTICO DE UPLOAD');
console.log('=========================\n');

async function diagnosticarUpload() {
    try {
        // 1. Verificar se a pasta uploads existe
        console.log('üìÅ [1/4] Verificando pasta uploads...');
        const uploadsPath = path.join(__dirname, 'src', 'uploads');
        console.log('üìç Caminho:', uploadsPath);
        
        if (!fs.existsSync(uploadsPath)) {
            console.log('‚ùå Pasta uploads n√£o existe! Criando...');
            fs.mkdirSync(uploadsPath, { recursive: true });
            console.log('‚úÖ Pasta uploads criada');
        } else {
            console.log('‚úÖ Pasta uploads existe');
        }
        
        // 2. Verificar permiss√µes
        console.log('\nüîê [2/4] Verificando permiss√µes...');
        try {
            const testFile = path.join(uploadsPath, 'test.txt');
            fs.writeFileSync(testFile, 'test');
            fs.unlinkSync(testFile);
            console.log('‚úÖ Permiss√µes OK');
        } catch (error) {
            console.log('‚ùå Erro de permiss√µes:', error.message);
        }
        
        // 3. Verificar estrutura de pastas
        console.log('\nüìÇ [3/4] Verificando estrutura...');
        const eventsPath = path.join(uploadsPath, 'events');
        if (!fs.existsSync(eventsPath)) {
            console.log('‚ùå Pasta events n√£o existe! Criando...');
            fs.mkdirSync(eventsPath, { recursive: true });
            console.log('‚úÖ Pasta events criada');
        } else {
            console.log('‚úÖ Pasta events existe');
        }
        
        // 4. Listar arquivos existentes
        console.log('\nüìã [4/4] Arquivos existentes:');
        try {
            const files = fs.readdirSync(uploadsPath);
            if (files.length === 0) {
                console.log('üìÅ Pasta vazia');
            } else {
                files.forEach(file => {
                    const filePath = path.join(uploadsPath, file);
                    const stats = fs.statSync(filePath);
                    console.log(`üìÑ ${file} - ${stats.size} bytes`);
                });
            }
        } catch (error) {
            console.log('‚ùå Erro ao listar arquivos:', error.message);
        }
        
        console.log('\n‚úÖ Diagn√≥stico conclu√≠do!');
        
    } catch (error) {
        console.log('‚ùå Erro no diagn√≥stico:', error.message);
    }
}

diagnosticarUpload(); 