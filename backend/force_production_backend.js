// Script para for√ßar o backend a usar o banco de produ√ß√£o
require('dotenv').config();

// For√ßar uso do banco de produ√ß√£o
process.env.DATABASE_URL = 'postgresql://postgres:WWiZILOORFMgerRjFMPSJLQrfLGFfviU@shuttle.proxy.rlwy.net:14638/railway';

console.log('üöÄ FOR√áANDO BACKEND A USAR BANCO DE PRODU√á√ÉO...');
console.log('üîß DATABASE_URL:', process.env.DATABASE_URL);

// Importar o backend com a configura√ß√£o for√ßada
const { db } = require('./src/database/db');

async function testProductionBackend() {
  try {
    console.log('üîç Testando conex√£o do backend com banco de PRODU√á√ÉO...');
    await db.raw('SELECT 1');
    console.log('‚úÖ Conex√£o estabelecida!');
    
    // Verificar produtos
    console.log('üîç Verificando produtos no backend...');
    const products = await db('store_products').select('*');
    console.log('üì¶ Produtos encontrados no backend:', products.length);
    
    if (products.length > 0) {
      console.log('üìã Lista de produtos no backend:');
      products.forEach(product => {
        console.log(`   - ID: ${product.id}, Nome: ${product.name}, Pre√ßo: R$ ${product.price}`);
      });
      
      // Testar busca espec√≠fica
      console.log('\nüîç Testando busca espec√≠fica no backend:');
      for (let i = 1; i <= 3; i++) {
        const product = await db('store_products').where('id', i).first();
        if (product) {
          console.log(`‚úÖ Produto ID ${i} encontrado no backend: ${product.name} - R$ ${product.price}`);
        } else {
          console.log(`‚ùå Produto ID ${i} N√ÉO encontrado no backend!`);
        }
      }
      
      // Simular uma requisi√ß√£o de registro
      console.log('\nüß™ Simulando requisi√ß√£o de registro...');
      const testData = {
        event_id: 999,
        customer: {
          name: 'Teste Usu√°rio',
          email: 'teste@teste.com',
          phone: '11999999999',
          cpf: null
        },
        items: [],
        products: [
          { product_id: 1, quantity: 1, unit_price: 45 },
          { product_id: 2, quantity: 1, unit_price: 35 }
        ]
      };
      
      console.log('üì¶ Dados de teste:', JSON.stringify(testData, null, 2));
      
      // Testar se os produtos s√£o encontrados
      for (const product of testData.products) {
        const foundProduct = await db('store_products').where('id', product.product_id).first();
        if (foundProduct) {
          console.log(`‚úÖ Produto ${product.product_id} encontrado: ${foundProduct.name} - R$ ${foundProduct.price}`);
        } else {
          console.log(`‚ùå Produto ${product.product_id} N√ÉO encontrado!`);
        }
      }
      
    } else {
      console.log('‚ùå Nenhum produto encontrado no backend!');
    }
    
  } catch (error) {
    console.error('‚ùå Erro no backend:', error);
  } finally {
    await db.destroy();
    process.exit(0);
  }
}

testProductionBackend(); 