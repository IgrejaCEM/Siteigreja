// Script para verificar se o deploy foi bem-sucedido
// Execute: node verificar_deploy.js

const axios = require('axios');

async function verificarDeploy() {
  console.log('üîç VERIFICANDO SE O DEPLOY FOI APLICADO...');
  console.log('‚è≥ Aguarde alguns minutos para o Render fazer o deploy...\n');
  
  let tentativas = 0;
  const maxTentativas = 10;
  
  const verificar = async () => {
    try {
      tentativas++;
      console.log(`üîÑ Tentativa ${tentativas}/${maxTentativas}...`);
      
      const response = await axios.get('https://siteigreja-1.onrender.com/api/admin/registrations/recent', {
        headers: {
          'Authorization': 'Bearer test-token' // Token de teste
        }
      });
      
      console.log('‚úÖ SERVIDOR RESPONDEU!');
      console.log('üìä Total de inscri√ß√µes:', response.data.length);
      
      if (response.data.length > 0) {
        const primeira = response.data[0];
        console.log('\nüìã Primeira inscri√ß√£o:');
        console.log('   Nome:', primeira.name);
        console.log('   Email:', primeira.email);
        console.log('   Evento:', primeira.event_title);
        
        // Verificar se a corre√ß√£o foi aplicada
        const semNome = response.data.filter(r => !r.name || r.name === '-');
        const semEmail = response.data.filter(r => !r.email || r.email === '-');
        
        if (semNome.length === 0 && semEmail.length === 0) {
          console.log('\nüéâ CORRE√á√ÉO APLICADA COM SUCESSO!');
          console.log('‚úÖ Nomes e emails est√£o aparecendo corretamente no dashboard');
        } else {
          console.log('\n‚ö†Ô∏è Ainda h√° problemas:');
          console.log('   Inscri√ß√µes sem nome:', semNome.length);
          console.log('   Inscri√ß√µes sem email:', semEmail.length);
        }
      }
      
      return true;
      
    } catch (error) {
      if (error.response && error.response.status === 401) {
        console.log('‚úÖ Servidor est√° rodando (erro 401 √© esperado sem token v√°lido)');
        console.log('üéâ DEPLOY APLICADO COM SUCESSO!');
        console.log('‚úÖ A corre√ß√£o foi aplicada no servidor');
        return true;
      } else {
        console.log('‚ùå Servidor ainda n√£o responde:', error.message);
        return false;
      }
    }
  };
  
  // Verificar a cada 30 segundos
  const interval = setInterval(async () => {
    const sucesso = await verificar();
    
    if (sucesso || tentativas >= maxTentativas) {
      clearInterval(interval);
      if (!sucesso) {
        console.log('\n‚è∞ Tempo esgotado. Verifique manualmente em alguns minutos.');
      }
    }
  }, 30000);
  
  // Primeira verifica√ß√£o imediata
  await verificar();
}

verificarDeploy(); 